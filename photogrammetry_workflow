Workflow to take single context point clouds and create volumetric entities

docker run -it chambbj/pdal-noble-kernel /bin/bash

apt-get update
apt-get install -y --fix-missing --no-install-recommends jq
exit


docker ps -a


docker commit <name> chambbj/pdal-noble-kernel-with-jq
docker commit determined_rosalind chambbj/pdal-noble-kernel-with-jq

#docker run -it --rm -v /p/KAP:/opt/data chambbj/pdal-noble-kernel pdal noble /opt/data/1.las /opt/data/2.las /opt/data/out1_2_1cm.las 0.01



docker run -it --rm -v /p/KAP/:/opt/data chambbj/pdal-noble-kernel-with-jq bash -c \
    "pdal info /opt/data/1.las --boundary | jq .boundary.boundary \
    | xargs -I {} pdal translate /opt/data/2.las /opt/data/clipped_1.las crop \
        --filters.crop.polygon={}”

docker run -i --rm -v /p/KAP/:/opt/data chambbj/pdal-noble-kernel-with-jq bash -c \
    "pdal info /opt/data/2.las --boundary | jq .boundary.boundary \
    | xargs -I {} pdal translate /opt/data/1.las /opt/data/clipped_1.las crop \
        --filters.crop.polygon={}”





# create a bounding polygon1 for pointcloud1
docker run -it --rm -v /p/KAP:/opt/data chambbj/pdal-noble-kernel pdal info opt/data/1.las --boundary

#pipeline
#https://www.pdal.io/tutorial/clipping-with-shapefile.html





 {
    "pipeline": [
        "p:/KAP/1.laz",
        {
            "column": "CLS",
            "datasource": "c:/Users/hobu/PDAL/exercises/analysis/clipping/attributes.vrt",
            "dimension": "Classification",
            "layer": "OGRGeoJSON",
            "type": "filters.overlay"
        },
        {
            "limits": "Classification[6:6]",
            "type": "filters.range"
        },
        "c:/Users/hobu/PDAL/exercises/analysis/clipping/stadium.las"
    ]
}
   



# clip pointcloud2 by polygon1

# repeat clipping for pointcloud1





#run the PDAL-noble-kernel
docker run -it --rm -v /p/KAP:/opt/data chambbj/pdal-noble-kernel pdal noble /opt/data/1.las /opt/data/2.las /opt/data/out1_2_1cm.las 0.01
